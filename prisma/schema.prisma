generator client {
  provider = "prisma-client-js"
  output   = "../generated"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Customer {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String    @db.VarChar(255)
  email     String    @db.VarChar(255)
  image_url String?   @db.VarChar(255)
  invoices  Invoice[]

  @@map("customers")
}

model Invoice {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id String        @db.Uuid
  status      InvoiceStatus @default(pending)
  date        DateTime      @db.Date
  products    Product[]

  customer Customer @relation(fields: [customer_id], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("invoices")
}

enum InvoiceStatus {
  pending
  paid
}

model Product {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  description String?
  price       BigInt
  invoice_id  String?   @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  invoice     Invoice?  @relation(fields: [invoice_id], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@map("products")
}

model Revenue {
  month   String @unique @db.VarChar(4)
  revenue Int

  @@map("revenue")
}

model User {
  id       String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String @db.VarChar(255)
  email    String @unique
  password String

  @@map("users")
}
